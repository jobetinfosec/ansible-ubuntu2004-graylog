---
# System update

- name: Update packages cache
  apt:
    update_cache: yes

# Install dependencies

- name: Install dependencies
  apt:
    pkg:
     - apt-transport-https
     - gnupg2
     - uuid-runtime
     - curl
     - dirmngr

- name: Install Java
  apt:
    name: openjdk-11-jre-headless
    state: latest

# Install Elasticsearch

- name: Add the ElasticSearch public GPG key to the apt repo
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present

- name: Add ElasticSearch to the trusted sources list
  apt_repository:
    repo: deb https://artifacts.elastic.co/packages/oss-6.x/apt stable main
    update_cache: yes
    state: present

- name: Install ElasticSearch
  apt:
    name: elasticsearch-oss
    state: latest

- name: Setup cluster name
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: '^#cluster.name: my-application'
    line: "cluster.name: graylog"
    state: present

- name: Disable auto create index
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    line: "action.auto_create_index: false"
    insertafter: "#action.destructive_requires_name: true"

- name: Reload services
  shell: systemctl daemon-reload

- name: Start and enable Elasticsearch service
  systemd:
    name: elasticsearch
    state: started
    enabled: yes

# Install MongoDB

- name: Install MongoDB
  apt:
    name: mongodb-server
    state: latest

- name: Start and enable MongoDB service
  systemd:
    name: mongodb
    state: started
    enabled: yes

# Install Graylog

- name: Download the Graylog repository package
  get_url:
    url: 'https://packages.graylog2.org/repo/packages/graylog-3.3-repository_latest.deb'
    dest: '/tmp/graylog_repository.deb'

- name: Install the Graylog repository package
  apt:
    deb: '/tmp/graylog_repository.deb'
    state: present
    dpkg_options: 'force-all'
    update_cache: yes
  register: install_repo

- name: Install Graylog
  apt:
    name: graylog-server
    state: latest
    update_cache: yes

- name: Setup password secret
  lineinfile:
    dest: /etc/graylog/server/server.conf
    regexp: '^password_secret ='
    line: "password_secret = {{ graylog_password_secret }}"
    state: present

- name: Setup root password hash
  lineinfile:
    dest: /etc/graylog/server/server.conf
    regexp: '^root_password_sha2 ='
    line: "root_password_sha2 = {{ graylog_password_hash }}"
    state: present

- name: Setup bind address
  lineinfile:
    dest: /etc/graylog/server/server.conf
    regexp: '^#http_bind_address = 127.0.0.1:9000'
    line: "http_bind_address = 127.0.0.1:9000"
    state: present

- name: Start and enable Graylog service
  systemd:
    name: graylog-server
    state: started
    enabled: yes

# Install Nginx proxy

- name: Install Nginx
  apt:
    name: nginx
    state: latest

- name: Create the Nginx configuration file
  template:
    src: graylog.j2
    dest: /etc/nginx/sites-available/{{ site_name }}
  notify: reload nginx

- name: Ensure that the default site is disabled
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: reload nginx

- name: Ensure that the application site is enabled
  file:
    src: /etc/nginx/sites-available/{{ site_name }}
    dest: /etc/nginx/sites-enabled/{{ site_name }}
    state: link
  notify: reload nginx

- name: Start and enable Nginx service
  systemd:
    name: nginx
    state: started
    enabled: yes

# Firewall rules

- name: Allow access to SSH only to admin IP
  ufw:
    rule: allow
    proto: tcp
    src: "{{ admin_ip }}"
    port: "{{ custom_ssh }}"

- name: Allowed ports
  ufw:
    rule: allow
    port: "{{ item }}"
  with_items:
    - "{{ ufw_allowed_ports }}"

- name: Enable firewall
  ufw: state=enabled



